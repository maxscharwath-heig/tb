@misc{amazon.comRiakDynamoAmazon2007,
  title        = {Riak: {{Dynamo}}: {{Amazon}}'s {{Highly Available Key-value Store}}},
  author       = {{Amazon.com}},
  year         = {2007},
  howpublished = {https://docs.riak.com/riak/kv/2.2.3/learn/dynamo/index.html}
}

@inproceedings{ellisConcurrencyControlGroupware1989,
  title     = {Concurrency {{Control}} in {{Groupware Systems}}},
  booktitle = {Proceedings of the 1989 {{ACM SIGMOD International Conference}} on {{Management}} of {{Data}}},
  author    = {Ellis, C. A. and Gibbs, S. J.},
  year      = {1989},
  series    = {{{SIGMOD}} '89},
  pages     = {399--407},
  publisher = {{Association for Computing Machinery}},
  address   = {{New York, NY, USA}},
  doi       = {10.1145/67544.66963},
  abstract  = {Groupware systems are computer-based systems that support two or more users engaged in a common task, and that provide an interface to a shared environment. These systems frequently require fine-granularity sharing of data and fast response times. This paper distinguishes real-time groupware systems from other multi-user systems and discusses their concurrency control requirements. An algorithm for concurrency control in real-time groupware systems is then presented. The advantages of this algorithm are its simplicity of use and its responsiveness: users can operate directly on the data without obtaining locks. The algorithm must know some semantics of the operations. However the algorithm's overall structure is independent of the semantic information, allowing the algorithm to be adapted to many situations. An example application of the algorithm to group text editing is given, along with a sketch of its proof of correctness in this particular case. We note that the behavior desired in many of these systems is non-serializable.},
  isbn      = {0-89791-317-5}
}

@misc{foundationApacheWave2012,
  title        = {Apache {{Wave}}},
  author       = {Foundation, The Apache Software},
  year         = {2012},
  howpublished = {https://incubator.apache.org/wave/}
}

@misc{hardenbergAutomerge2023,
  title        = {Automerge 2.0},
  author       = {van Hardenberg, Peter},
  year         = {2023},
  howpublished = {https://automerge.org/blog/automerge-2}
}

@misc{holzleOfficialGoogleBlog2010,
  title        = {Official {{Google Blog}}: {{Update}} on {{Google Wave}}},
  author       = {H{\"o}lzle, Urs},
  year         = {2010},
  howpublished = {https://googleblog.blogspot.com/2010/08/update-on-google-wave.html}
}

@misc{incImmuDB2023,
  title        = {{{ImmuDB}}},
  author       = {Inc, Codenotary},
  year         = {2023},
  howpublished = {https://immudb.io/}
}

@misc{incIntroducingGoogleWave2009,
  title        = {Introducing {{Google Wave}}},
  author       = {Inc, Google},
  year         = {2009},
  howpublished = {https://www.youtube.com/watch?v=v\_UyVmITiYQ},
  annotation   = {Published: Google I/O Developer Conference}
}

@inproceedings{kleppmannLocalFirstSoftwareYou2019,
  title     = {Local-{{First Software}}: {{You Own Your Data}}, in {{Spite}} of the {{Cloud}}},
  booktitle = {Proceedings of the 2019 {{ACM SIGPLAN International Symposium}} on {{New Ideas}}, {{New Paradigms}}, and {{Reflections}} on {{Programming}} and {{Software}}},
  author    = {Kleppmann, Martin and Wiggins, Adam and {van Hardenberg}, Peter and McGranaghan, Mark},
  year      = {2019},
  series    = {Onward! 2019},
  pages     = {154--178},
  publisher = {{Association for Computing Machinery}},
  address   = {{New York, NY, USA}},
  doi       = {10.1145/3359591.3359737},
  abstract  = {Cloud apps like Google Docs and Trello are popular because they enable real-time collaboration with colleagues, and they make it easy for us to access our work from all of our devices. However, by centralizing data storage on servers, cloud apps also take away ownership and agency from users. If a service shuts down, the software stops functioning, and data created with that software is lost. In this article we propose local-first software, a set of principles for software that enables both collaboration and ownership for users. Local-first ideals include the ability to work offline and collaborate across multiple devices, while also improving the security, privacy, long-term preservation, and user control of data. We survey existing approaches to data storage and sharing, ranging from email attachments to web apps to Firebase-backed mobile apps, and we examine the trade-offs of each. We look at Conflict-free Replicated Data Types (CRDTs): data structures that are multi-user from the ground up while also being fundamentally local and private. CRDTs have the potential to be a foundational technology for realizing local-first software. We share some of our findings from developing local-first software prototypes at the Ink \&amp; Switch research lab over the course of several years. These experiments test the viability of CRDTs in practice, and explore the user interface challenges for this new data model. Lastly, we suggest some next steps for moving towards local-first software: for researchers, for app developers, and a startup opportunity for entrepreneurs.},
  isbn      = {978-1-4503-6995-4},
  keywords  = {collaboration software,CRDTs,data ownership,mobile computing,peer-to-peer communication}
}

@book{nicolaescuYjsFrameworkRealTime2015,
  title     = {Yjs: {{A Framework}} for {{Near Real-Time P2P Shared Editing}} on {{Arbitrary Data Types}}},
  author    = {Nicolaescu, Petru and Jahns, Kevin and Derntl, Michael and Klamma, Ralf},
  editor    = {Cimiano, Philipp and Frasincar, Flavius and Houben, Geert-Jan and Schwabe, Daniel},
  year      = {2015},
  journal   = {Engineering the Web in the Big Data Era},
  publisher = {{Springer International Publishing}},
  address   = {{Cham}},
  abstract  = {Near real-time shared editing of documents in the Web browser has become popular for many applications like text writing, drawing, sketching and others. These applications require protocols for exchanging messages among user agents and for resolving editing conflicts. The available frameworks mostly rely on operational transformation approaches and often expose drawbacks like failing to scale, restriction to linear data structures and client-server architectures. In this paper we present Yjs, a lightweight open-source JavaScript framework that can be used for collaborative editing of arbitrary data types in peer-to-peer settings. The framework is based on a new operational transformation-like approach and supports communication protocols like XMPP and WebRTC. From an engineering perspective Yjs is easy to integrate into Web applications. Evaluations show that it has a favorable runtime complexity.},
  isbn      = {978-3-319-19890-3}
}

@techreport{shapiroComprehensiveStudyConvergent2011,
  type        = {Research {{Report}}},
  title       = {A Comprehensive Study of {{Convergent}} and {{Commutative Replicated Data Types}}},
  author      = {Shapiro, Marc and Pregui{\c c}a, Nuno and Baquero, Carlos and Zawirski, Marek},
  year        = {2011},
  month       = jan,
  number      = {RR-7506},
  pages       = {50},
  institution = {{Inria \textendash{} Centre Paris-Rocquencourt ; INRIA}},
  keywords    = {commutative operations,Data replication,distributed algorithms,distributed systems,eventual consistency,optimistic replication,replicated data types}
}

@misc{smithShareDBRealtimeDocument2014,
  title        = {{{ShareDB}}: {{Real-time}} Document Collaboration with Operational Transformation},
  author       = {Smith, Nate and Gentle, Joseph},
  year         = {2014},
  howpublished = {https://github.com/share/sharedb}
}

@inproceedings{sunOperationalTransformationRealTime1998,
  title     = {Operational {{Transformation}} in {{Real-Time Group Editors}}: {{Issues}}, {{Algorithms}}, and {{Achievements}}},
  booktitle = {Proceedings of the 1998 {{ACM Conference}} on {{Computer Supported Cooperative Work}}},
  author    = {Sun, Chengzheng and Ellis, Clarence},
  year      = {1998},
  series    = {{{CSCW}} '98},
  pages     = {59--68},
  publisher = {{Association for Computing Machinery}},
  address   = {{New York, NY, USA}},
  doi       = {10.1145/289444.289469},
  isbn      = {1-58113-009-0},
  keywords  = {causality preservation,consistency maintenance,convergence,distributed computing,group editors,groupware,intention preservation,operational transformation}
}

@misc{TldrawTldraw2023,
  title        = {Tldraw/Tldraw},
  year         = {2023},
  month        = apr,
  urldate      = {2023-04-25},
  abstract     = {A tiny little drawing app.},
  copyright    = {MIT},
  howpublished = {tldraw},
  keywords     = {code,drawing,fun,sketch,svg,whiteboard}
}
